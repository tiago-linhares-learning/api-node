name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-node:
    runs-on: self-hosted  

    steps:
      - name: Instalar Docker
        run: |
          if ! command -v docker &> /dev/null
          then
            echo "Docker não encontrado. Instalando..."
            curl -fsSL https://get.docker.com | sh
            sudo usermod -aG docker $USER
            sudo systemctl start docker
            sudo systemctl enable docker
            docker --version  # Verifica se o Docker foi instalado corretamente
          else
            echo "Docker já está instalado."
          fi

      - name: Instalar Node.js v22.14.0
        run: |
          curl -sL https://deb.nodesource.com/setup_22.x | sudo -E bash -
          sudo apt-get install -y nodejs
          node -v  # Verifica a versão do Node.js

  build:
    needs: setup-node  
    runs-on: self-hosted  

    steps:
      - name: Checkout código
        uses: actions/checkout@v2

      - name: Instalar dependências
        run: |
          npm install

      - name: Executar testes unitários
        run: |
          npm test

      - name: Construir a aplicação
        run: |
          npm run build
    
      - name: Limpar imagens Docker antigas
        run: |
          docker system prune -af 
    
      - name: Construir imagem Docker
        run: |
          docker build -f docker/Dockerfile -t tiagolinhares/my-node-app:${{ github.sha }} .
          docker tag tiagolinhares/my-node-app:${{ github.sha }} tiagolinhares/my-node-app:latest

      - name: Logar no Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  
          password: ${{ secrets.DOCKER_PASSWORD }}  

      - name: Enviar imagem para Docker Hub
        run: |
          docker images
          docker push tiagolinhares/my-node-app:${{ github.sha }}
          docker push tiagolinhares/my-node-app:latest

      - name: Salvar imagem Docker como arquivo .tar
        run: |
          docker save -o my-node-app-${{ github.sha }}.tar tiagolinhares/my-node-app:${{ github.sha }}

      - name: Fazer upload da imagem Docker como artefato
        uses: softprops/action-gh-release@v1
        with:
          files: |
            my-node-app-${{ github.sha }}.tar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Criar um release no GitHub e armazenar artefatos
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.sha }}
          release_name: Release ${{ github.sha }}
          body: "Release para o commit ${{ github.sha }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
